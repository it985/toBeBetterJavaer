const e=JSON.parse('{"key":"v-4b1bf2c5","path":"/basic-extra-meal/box.html","title":"深入浅出Java拆箱与装箱：理解自动类型转换与包装类的关系","lang":"zh-CN","frontmatter":{"title":"深入浅出Java拆箱与装箱：理解自动类型转换与包装类的关系","shortTitle":"拆箱和装箱","category":["Java核心"],"tag":["Java重要知识点"],"description":"拆箱与装箱是Java自动类型转换的重要概念。拆箱是将包装类对象转换为其对应的基本数据类型，而装箱是将基本数据类型转换为相应的包装类对象。本文详细介绍了拆箱和装箱的过程、原理以及Java中的包装类，以帮助您更好地理解这两个概念","author":"沉默王二","head":[["meta",{"name":"keywords","content":"Java,Java SE,Java基础,Java教程,二哥的Java进阶之路,Java进阶之路,Java入门,教程,装箱,拆箱,包装类型,基本数据类型,自动装箱,自动拆箱"}],["meta",{"property":"og:url","content":"https://javabetter.cn/basic-extra-meal/box.html"}],["meta",{"property":"og:site_name","content":"二哥的Java进阶之路"}],["meta",{"property":"og:title","content":"深入浅出Java拆箱与装箱：理解自动类型转换与包装类的关系"}],["meta",{"property":"og:description","content":"拆箱与装箱是Java自动类型转换的重要概念。拆箱是将包装类对象转换为其对应的基本数据类型，而装箱是将基本数据类型转换为相应的包装类对象。本文详细介绍了拆箱和装箱的过程、原理以及Java中的包装类，以帮助您更好地理解这两个概念"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-01-01T08:21:57.000Z"}],["meta",{"property":"article:author","content":"沉默王二"}],["meta",{"property":"article:tag","content":"Java重要知识点"}],["meta",{"property":"article:modified_time","content":"2024-01-01T08:21:57.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"深入浅出Java拆箱与装箱：理解自动类型转换与包装类的关系\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-01-01T08:21:57.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"沉默王二\\"}]}"]]},"headers":[{"level":3,"title":"包装类型和基本数据类型之间的区别","slug":"包装类型和基本数据类型之间的区别","link":"#包装类型和基本数据类型之间的区别","children":[]},{"level":3,"title":"自动装箱和自动拆箱","slug":"自动装箱和自动拆箱","link":"#自动装箱和自动拆箱","children":[]},{"level":3,"title":"IntegerCache","slug":"integercache","link":"#integercache","children":[]},{"level":3,"title":"自动拆箱的注意事项","slug":"自动拆箱的注意事项","link":"#自动拆箱的注意事项","children":[]},{"level":3,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1634887330000,"updatedTime":1704097317000,"contributors":[{"name":"itwanger","email":"www.qing_gee@163.com","commits":17},{"name":"沉默王二","email":"www.qing_gee@163.com","commits":5}]},"readingTime":{"minutes":14.13,"words":4238},"filePathRelative":"basic-extra-meal/box.md","localizedDate":"2021年10月22日","excerpt":"<h1> 13.3 拆箱和装箱</h1>\\n<p>“哥，听说 Java 的每个<a href=\\"https://javabetter.cn/basic-grammar/basic-data-type.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">基本数据类型</a>都对应了一个包装类型，比如说 int 的包装类型为 Integer，double 的包装类型为 Double，是这样吗？”从三妹这句话当中，能听得出来，她已经提前预习这块内容了。</p>\\n<p>“是的，三妹。”我接着三妹的问题回答说。</p>\\n<ul>\\n<li>Java 是面向对象的编程语言，但为了提升程序的运行效率，所以 Java 搞出来了基本数据类型这套东西，比如说 int、double、boolean 等等。后面我会讲为什么。</li>\\n<li>但是，基本数据类型又不能满足所有的应用场景，比如说，我们定义一个 int 类型的 ArrayList，你就只能用 <code>List&lt;Integer&gt; list = new ArrayList&lt;&gt;();</code> 这种方式来定义，不能用 <code>List&lt;int&gt; list = new ArrayList&lt;&gt;();</code> 这种方式来定义，因为<a href=\\"https://javabetter.cn/basic-extra-meal/generic.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">泛型</a>不支持基本数据类型。后面我也会讲为什么。</li>\\n</ul>"}');export{e as data};
