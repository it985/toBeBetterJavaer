const e=JSON.parse('{"key":"v-6b83fb9e","path":"/sidebar/sanfene/shejimoshi.html","title":"设计模式面试题，1道设计模式八股文（1万字1张手绘图），面渣逆袭必看👍","lang":"zh-CN","frontmatter":{"title":"设计模式面试题，1道设计模式八股文（1万字1张手绘图），面渣逆袭必看👍","shortTitle":"面渣逆袭-设计模式","description":"下载次数超 1 万次，1 万字 1 张手绘图，详解 1 道 设计模式 面试高频题（让天下没有难背的八股），面渣背会这些 设计模式 八股文，这次吊打面试官，我觉得稳了（手动 dog）。","author":"沉默王二","category":["面渣逆袭"],"tag":["面渣逆袭"],"head":[["meta",{"name":"keywords","content":"设计模式面试题,设计模式,八股文,面试题"}],["meta",{"property":"og:url","content":"https://javabetter.cn/sidebar/sanfene/shejimoshi.html"}],["meta",{"property":"og:site_name","content":"二哥的Java进阶之路"}],["meta",{"property":"og:title","content":"设计模式面试题，1道设计模式八股文（1万字1张手绘图），面渣逆袭必看👍"}],["meta",{"property":"og:description","content":"下载次数超 1 万次，1 万字 1 张手绘图，详解 1 道 设计模式 面试高频题（让天下没有难背的八股），面渣背会这些 设计模式 八股文，这次吊打面试官，我觉得稳了（手动 dog）。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-13T22:58:03.000Z"}],["meta",{"property":"article:author","content":"沉默王二"}],["meta",{"property":"article:tag","content":"面渣逆袭"}],["meta",{"property":"article:modified_time","content":"2024-05-13T22:58:03.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"设计模式面试题，1道设计模式八股文（1万字1张手绘图），面渣逆袭必看👍\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-05-13T22:58:03.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"沉默王二\\"}]}"]]},"headers":[{"level":2,"title":"01、什么是责任链模式？","slug":"_01、什么是责任链模式","link":"#_01、什么是责任链模式","children":[{"level":3,"title":"基本概念","slug":"基本概念","link":"#基本概念","children":[]},{"level":3,"title":"工作流程","slug":"工作流程","link":"#工作流程","children":[]},{"level":3,"title":"应用场景","slug":"应用场景","link":"#应用场景","children":[]},{"level":3,"title":"优缺点","slug":"优缺点","link":"#优缺点","children":[]},{"level":3,"title":"实现示例","slug":"实现示例","link":"#实现示例","children":[]}]},{"level":2,"title":"02、什么是工厂模式？","slug":"_02、什么是工厂模式","link":"#_02、什么是工厂模式","children":[{"level":3,"title":"工厂模式的主要类型","slug":"工厂模式的主要类型","link":"#工厂模式的主要类型","children":[]},{"level":3,"title":"应用场景","slug":"应用场景-1","link":"#应用场景-1","children":[]}]},{"level":2,"title":"03、什么是单例模式？","slug":"_03、什么是单例模式","link":"#_03、什么是单例模式","children":[{"level":3,"title":"实现单例模式的关键点？","slug":"实现单例模式的关键点","link":"#实现单例模式的关键点","children":[]},{"level":3,"title":"常见的单例模式实现？","slug":"常见的单例模式实现","link":"#常见的单例模式实现","children":[]},{"level":3,"title":"单例模式的好处有哪些？","slug":"单例模式的好处有哪些","link":"#单例模式的好处有哪些","children":[]},{"level":3,"title":"单例模式有几种实现方式？","slug":"单例模式有几种实现方式","link":"#单例模式有几种实现方式","children":[]}]},{"level":2,"title":"04、了解哪些设计模式？","slug":"_04、了解哪些设计模式","link":"#_04、了解哪些设计模式","children":[]},{"level":2,"title":"05.什么是策略模式？","slug":"_05-什么是策略模式","link":"#_05-什么是策略模式","children":[]}],"git":{"createdTime":1709954441000,"updatedTime":1715641083000,"contributors":[{"name":"itwanger","email":"www.qing_gee@163.com","commits":13},{"name":"沉默王二","email":"www.qing_gee@163.com","commits":2}]},"readingTime":{"minutes":15.35,"words":4605},"filePathRelative":"sidebar/sanfene/shejimoshi.md","localizedDate":"2024年3月9日","excerpt":"<p>设计模式是软件工程中常用的解决特定问题的模版或者蓝图，可以帮助我们开发者以一种更加清晰、高效和可重用的方式来编写代码。通常分为三类：</p>\\n<ol>\\n<li><strong>创建型模式</strong>：涉及对象实例化，用于创建对象的模式，可以增加程序的灵活性和可重用性。常见的创建型模式有工厂方法、抽象工厂、单例、建造者、原型等。</li>\\n<li><strong>结构型模式</strong>：涉及类和对象的组合，用于设计类和对象的结构，以便更好地实现程序的功能。常见的结构型模式有适配器、桥接、组合、装饰、外观、享元、代理等。</li>\\n<li><strong>行为型模式</strong>：关注对象之间的通信，包括责任链、命令、解释器、迭代器、中介者、备忘录、观察者、状态、策略、模板方法、访问者等。</li>\\n</ol>"}');export{e as data};
