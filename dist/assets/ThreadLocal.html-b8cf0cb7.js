const e=JSON.parse('{"key":"v-00920464","path":"/thread/ThreadLocal.html","title":"吊打Java并发面试官之ThreadLocal","lang":"zh-CN","frontmatter":{"title":"吊打Java并发面试官之ThreadLocal","shortTitle":"ThreadLocal","description":"ThreadLocal 是 Java 中提供的一种用于实现线程局部变量的工具。它允许每个线程都可以有自己的独立副本，从而实现线程隔离，可以用于解决多线程中共享对象的线程安全问题。","category":["Java核心"],"tag":["Java并发编程"],"head":[["meta",{"name":"keywords","content":"Java,并发编程,多线程,Thread,ThreadLocal"}],["meta",{"property":"og:url","content":"https://javabetter.cn/thread/ThreadLocal.html"}],["meta",{"property":"og:site_name","content":"二哥的Java进阶之路"}],["meta",{"property":"og:title","content":"吊打Java并发面试官之ThreadLocal"}],["meta",{"property":"og:description","content":"ThreadLocal 是 Java 中提供的一种用于实现线程局部变量的工具。它允许每个线程都可以有自己的独立副本，从而实现线程隔离，可以用于解决多线程中共享对象的线程安全问题。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-18T01:36:51.000Z"}],["meta",{"property":"article:author","content":"沉默王二"}],["meta",{"property":"article:tag","content":"Java并发编程"}],["meta",{"property":"article:modified_time","content":"2024-03-18T01:36:51.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"吊打Java并发面试官之ThreadLocal\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-03-18T01:36:51.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"沉默王二\\",\\"url\\":\\"/about-the-author/\\"}]}"]]},"headers":[{"level":2,"title":"ThreadLocal 的源码分析","slug":"threadlocal-的源码分析","link":"#threadlocal-的源码分析","children":[{"level":3,"title":"set 方法","slug":"set-方法","link":"#set-方法","children":[]},{"level":3,"title":"get 方法","slug":"get-方法","link":"#get-方法","children":[]},{"level":3,"title":"remove 方法","slug":"remove-方法","link":"#remove-方法","children":[]}]},{"level":2,"title":"ThreadLocalMap 的源码分析","slug":"threadlocalmap-的源码分析","link":"#threadlocalmap-的源码分析","children":[{"level":3,"title":"哈希表","slug":"哈希表","link":"#哈希表","children":[]},{"level":3,"title":"set 方法","slug":"set-方法-1","link":"#set-方法-1","children":[]},{"level":3,"title":"getEntry 方法","slug":"getentry-方法","link":"#getentry-方法","children":[]},{"level":3,"title":"remove 方法","slug":"remove-方法-1","link":"#remove-方法-1","children":[]}]},{"level":2,"title":"ThreadLocal 的使用场景","slug":"threadlocal-的使用场景","link":"#threadlocal-的使用场景","children":[]},{"level":2,"title":"小结","slug":"小结","link":"#小结","children":[]}],"git":{"createdTime":1648037338000,"updatedTime":1710725811000,"contributors":[{"name":"itwanger","email":"www.qing_gee@163.com","commits":18},{"name":"沉默王二","email":"www.qing_gee@163.com","commits":2}]},"readingTime":{"minutes":22.46,"words":6739},"filePathRelative":"thread/ThreadLocal.md","localizedDate":"2022年3月23日","excerpt":"<h1> 第二十四节：本地变量 ThreadLocal</h1>\\n<p>是 Java 中提供的一种用于实现线程局部变量的工具类。它允许每个线程都拥有自己的独立副本，从而实现线程隔离，用于解决多线程中共享对象的线程安全问题。</p>\\n<p>通常，我们会使用 <a href=\\"https://javabetter.cn/thread/synchronized-1.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">synchronzed 关键字</a> 或者 <a href=\\"https://javabetter.cn/thread/lock.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">lock</a> 来控制线程对临界区资源的同步顺序，但这种加锁的方式会让未获取到锁的线程进行阻塞，很显然，这种方式的时间效率不会特别高。</p>"}');export{e as data};
