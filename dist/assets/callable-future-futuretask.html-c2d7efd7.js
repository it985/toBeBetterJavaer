const e=JSON.parse('{"key":"v-62fb9cf0","path":"/thread/callable-future-futuretask.html","title":"获取 Java 线程执行结果：Callable、Future和FutureTask","lang":"zh-CN","frontmatter":{"title":"获取 Java 线程执行结果：Callable、Future和FutureTask","shortTitle":"获取线程的执行结果","description":"本文深入解释了如何在Java中使用Callable、Future和FutureTask来获取多线程执行结果。无论你是Java新手还是经验丰富的开发者，你都能在这里找到有用的信息和技巧。点击了解更多。","category":["Java核心"],"tag":["Java并发编程"],"head":[["meta",{"name":"keywords","content":"Java, 多线程, Callable, Future, FutureTask, 线程执行结果"}],["meta",{"property":"og:url","content":"https://javabetter.cn/thread/callable-future-futuretask.html"}],["meta",{"property":"og:site_name","content":"二哥的Java进阶之路"}],["meta",{"property":"og:title","content":"获取 Java 线程执行结果：Callable、Future和FutureTask"}],["meta",{"property":"og:description","content":"本文深入解释了如何在Java中使用Callable、Future和FutureTask来获取多线程执行结果。无论你是Java新手还是经验丰富的开发者，你都能在这里找到有用的信息和技巧。点击了解更多。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-08T12:03:00.000Z"}],["meta",{"property":"article:author","content":"沉默王二"}],["meta",{"property":"article:tag","content":"Java并发编程"}],["meta",{"property":"article:modified_time","content":"2023-12-08T12:03:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"获取 Java 线程执行结果：Callable、Future和FutureTask\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-12-08T12:03:00.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"沉默王二\\",\\"url\\":\\"/about-the-author/\\"}]}"]]},"headers":[{"level":2,"title":"无返回值的 Runnable","slug":"无返回值的-runnable","link":"#无返回值的-runnable","children":[]},{"level":2,"title":"有返回值的 Callable","slug":"有返回值的-callable","link":"#有返回值的-callable","children":[]},{"level":2,"title":"异步计算结果 Future 接口","slug":"异步计算结果-future-接口","link":"#异步计算结果-future-接口","children":[]},{"level":2,"title":"异步计算结果 FutureTask 实现类","slug":"异步计算结果-futuretask-实现类","link":"#异步计算结果-futuretask-实现类","children":[]},{"level":2,"title":"小结","slug":"小结","link":"#小结","children":[]}],"git":{"createdTime":1680851018000,"updatedTime":1702036980000,"contributors":[{"name":"itwanger","email":"www.qing_gee@163.com","commits":8},{"name":"沉默王二","email":"www.qing_gee@163.com","commits":4}]},"readingTime":{"minutes":6.16,"words":1849},"filePathRelative":"thread/callable-future-futuretask.md","localizedDate":"2023年4月7日","excerpt":"<h1> 第二节：获取线程的执行结果</h1>\\n<p><a href=\\"https://javabetter.cn/thread/wangzhe-thread.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">在第一节：初步掌握 Java 多线程中</a>，我们讲述了创建线程的 3 种方式，一种是直接继承 Thread，一种是实现 Runnable 接口，另外一种是实现 Callable 接口。</p>\\n<p>前 2 种方式都有一个缺陷：在执行完任务之后无法获取执行结果。</p>\\n<p>如果需要获取执行结果，就必须通过共享变量或者线程通信的方式来达到目的，这样使用起来就比较麻烦。</p>"}');export{e as data};
