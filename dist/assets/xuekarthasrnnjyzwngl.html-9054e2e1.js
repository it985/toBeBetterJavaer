import{_ as l}from"./plugin-vue_export-helper-c27b6911.js";import{r as d,o as r,c as s,a as e,d as i,b as a,e as t}from"./app-72970f25.js";const o={},c=e("figure",null,[e("img",{src:"https://mmbiz.qpic.cn/mmbiz_png/CKvMdchsUwnWxQwZTsUTr44QOG4offoofMt02gUqw6HxR9PyOoAlPutQEBKmxlSdGW0sfJmwdMjHffuVzw59pw/640?wx_fmt=png",alt:"",tabindex:"0",loading:"lazy"}),e("figcaption")],-1),m={href:"http://macrozheng.com",target:"_blank",rel:"noopener noreferrer"},u=e("blockquote",null,[e("p",null,"线上项目遇到问题无法调试，线下又无法重现，难道只能加日志再重新发布么？有了这款神器，既可以线上调试，又可以实现热修复，推荐给大家！")],-1),g=e("h2",{id:"arthas-简介",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#arthas-简介","aria-hidden":"true"},"#"),i(" Arthas 简介")],-1),b=e("p",null,"Arthas是Alibaba开源的Java诊断工具，深受开发者喜爱。它采用命令行交互模式，同时提供丰富的 Tab 自动补全功能，进一步方便进行问题的定位和诊断。",-1),p=e("h2",{id:"安装",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#安装","aria-hidden":"true"},"#"),i(" 安装")],-1),h=e("blockquote",null,[e("p",null,"为了还原一个真实的线上环境，我们将通过Arthas来对Docker容器中的Java程序进行诊断。")],-1),v=e("code",null,"arthas-boot",-1),f={href:"https://alibaba.github.io/arthas/arthas-boot.jar",target:"_blank",rel:"noopener noreferrer"},x=e("li",null,[i("将我们的Spring Boot应用"),e("code",null,"mall-tiny-arthas"),i("使用Docker容器的方式启动起来，打包和运行脚本在项目的"),e("code",null,"src\\main\\docker"),i("目录下；")],-1),_=e("li",null,[i("将"),e("code",null,"arthas-boot.jar"),i("拷贝到我们应用容器的"),e("code",null,"\\"),i("目录下；")],-1),w=e("div",{class:"language-text line-numbers-mode","data-ext":"text"},[e("pre",{class:"language-text"},[e("code",null,`docker container cp arthas-boot.jar mall-tiny-arthas:/
`)]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"})])],-1),z=e("p",null,[e("strong",null,"这或许是一个对你有用的开源项目"),i("，mall项目是一套基于 SpringBoot + Vue + uni-app 实现的电商系统（"),e("strong",null,"Github标星60K"),i("），采用Docker容器化部署。包括前台商城项目和后台管理系统，能支持完整的订单流程！涵盖商品、订单、购物车、权限、优惠券、会员、支付等功能，功能很强大！")],-1),q={href:"https://github.com/macrozheng/mall",target:"_blank",rel:"noopener noreferrer"},y={href:"https://www.macrozheng.com/video/",target:"_blank",rel:"noopener noreferrer"},M=e("p",null,"后台管理系统演示：",-1),T=e("figure",null,[e("img",{src:"https://mmbiz.qpic.cn/mmbiz_png/CKvMdchsUwnWxQwZTsUTr44QOG4offooZibx2EYRWyJrY7NmXbXfcB4CwIqjEGqc8RT6pgLWOBOc23rbXiaoPJAA/640?wx_fmt=png",alt:"",tabindex:"0",loading:"lazy"}),e("figcaption")],-1),U=e("p",null,"前台商城项目演示：",-1),Q=e("figure",null,[e("img",{src:"https://mmbiz.qpic.cn/mmbiz_jpg/CKvMdchsUwnWxQwZTsUTr44QOG4offooPpBKzKdNcKKkF1dV99uu44cz6ib9aPHRiaXAsBst5bdGNMd1rHdlZD5g/640?wx_fmt=jpeg",alt:"",tabindex:"0",loading:"lazy"}),e("figcaption")],-1),C=t(`<ul><li>进入容器并启动<code>arthas-boot</code>，直接当做jar包启动即可；</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker exec -it mall-tiny-arthas /bin/bash 
 java -jar arthas-boot.jar
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>启动成功后，选择当前需要诊断的Java程序的序列号，这里是<code>1</code>，就可以开始诊断了；</li></ul><figure><img src="https://mmbiz.qpic.cn/mmbiz_png/CKvMdchsUwnWxQwZTsUTr44QOG4offoodlticV45SDUapV9gIDxtrhx83th0hia20GhPtc6QxycPibopwDMn7GquA/640?wx_fmt=png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>期间会下载一些所需的文件，完成后控制台打印信息如下，至此Arthas就安装启动完成了。</li></ul><figure><img src="https://mmbiz.qpic.cn/mmbiz_png/CKvMdchsUwnWxQwZTsUTr44QOG4offoocXDvsI6BWMZK7hG1N5jib5ibd1bdB60LUcy5jl5UEjtEt2RgMjicZV8cA/640?wx_fmt=png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="常用命令" tabindex="-1"><a class="header-anchor" href="#常用命令" aria-hidden="true">#</a> 常用命令</h2><blockquote><p>我们先来介绍一些Arthas的常用命令，会结合实际应用来讲解，带大家了解下Arthas的使用。</p></blockquote><h3 id="dashboard" tabindex="-1"><a class="header-anchor" href="#dashboard" aria-hidden="true">#</a> dashboard</h3><p>使用<code>dashboard</code>命令可以显示当前系统的实时数据面板，包括线程信息、JVM内存信息及JVM运行时参数。</p><figure><img src="https://mmbiz.qpic.cn/mmbiz_png/CKvMdchsUwnWxQwZTsUTr44QOG4offooIicNVhmyRYWwByva2RhExpYJicXr3bPSRibiaAZTwOvT4WDT79IzqHicPIQ/640?wx_fmt=png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="thread" tabindex="-1"><a class="header-anchor" href="#thread" aria-hidden="true">#</a> thread</h3><p>查看当前线程信息，查看线程的堆栈，可以找出当前最占CPU的线程。</p><figure><img src="https://mmbiz.qpic.cn/mmbiz_png/CKvMdchsUwnWxQwZTsUTr44QOG4offooDH3CPZp4K60fpwyJYWhlQMBp8lDyopQyn7NAml4iae2mguSyZPne8CA/640?wx_fmt=png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>常用命令：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code># 打印当前最忙的3个线程的堆栈信息 
 thread -n 3 
 # 查看ID为1都线程的堆栈信息 
 thread 1 
 # 找出当前阻塞其他线程的线程 
 thread -b 
 # 查看指定状态的线程 
 thread -state WAITING
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sysprop" tabindex="-1"><a class="header-anchor" href="#sysprop" aria-hidden="true">#</a> sysprop</h3><p>查看当前JVM的系统属性，比如当容器时区与宿主机不一致时，可以使用如下命令查看时区信息。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>sysprop |grep timezone
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>user.timezone                  Asia/Shanghai
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="sysenv" tabindex="-1"><a class="header-anchor" href="#sysenv" aria-hidden="true">#</a> sysenv</h3><p>查看JVM的环境属性，比如查看下我们当前启用的是什么环境的Spring Boot配置。</p><figure><img src="https://mmbiz.qpic.cn/mmbiz_png/CKvMdchsUwnWxQwZTsUTr44QOG4offooKb7Rr97RrbzSmqibRpgUa2JzfsZskf3TK1kz6MFTgJkSMNNxjAktMlw/640?wx_fmt=png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="logger" tabindex="-1"><a class="header-anchor" href="#logger" aria-hidden="true">#</a> logger</h3><p>使用<code>logger</code>命令可以查看日志信息，并改变日志级别，这个命令非常有用。</p><p>比如我们在生产环境上一般是不会打印<code>DEBUG</code>级别的日志的，当我们在线上排查问题时可以临时开启<code>DEBUG</code>级别的日志，帮助我们排查问题，下面介绍下如何操作。</p><ul><li>我们的应用默认使用的是<code>INFO</code>级别的日志，使用<code>logger</code>命令可以查看；</li></ul><figure><img src="https://mmbiz.qpic.cn/mmbiz_png/CKvMdchsUwnWxQwZTsUTr44QOG4offooXUAbr8SPnOc4W9mE5ejyDRK9yymIKiamWlE2vYcIgd9fuvF81wakiaRw/640?wx_fmt=png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>使用如下命令改变日志级别为<code>DEBUG</code>，需要使用<code>-c</code>参数指定类加载器的HASH值；</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>logger -c 21b8d17c --name ROOT --level debug
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>再使用<code>logger</code>命令查看，发现<code>ROOT</code>级别日志已经更改；</li></ul><figure><img src="https://mmbiz.qpic.cn/mmbiz_png/CKvMdchsUwnWxQwZTsUTr44QOG4offoosBgHiapOrFOGyLHSSHPOH0zyLzNIYiaBvgtA4HJB3Vicc3bN8MrfTkaiaw/640?wx_fmt=png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>使用<code>docker logs -f mall-tiny-arthas</code>命令查看容器日志，发现已经打印了DEBUG级别的日志；</li></ul><figure><img src="https://mmbiz.qpic.cn/mmbiz_png/CKvMdchsUwnWxQwZTsUTr44QOG4offoo0YHtD9DclMt90INRSdVQHAWs82DMpT6fV1yjZ4mEglS0bficdmtTBWQ/640?wx_fmt=png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>查看完日志以后记得要把日志级别再调回<code>INFO</code>级别。</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>logger -c 21b8d17c --name ROOT --level info
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="sc" tabindex="-1"><a class="header-anchor" href="#sc" aria-hidden="true">#</a> sc</h3><p>查看JVM已加载的类信息，<code>Search-Class</code>的简写，搜索出所有已经加载到 JVM 中的类信息。</p><ul><li>搜索<code>com.macro.mall</code>包下所有的类；</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>sc com.macro.mall.*
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://mmbiz.qpic.cn/mmbiz_png/CKvMdchsUwnWxQwZTsUTr44QOG4offooBo8pERuJ8c8eevSXfapmn16VZXNzbS6VLYCyADYbWu32ybReNP7tIw/640?wx_fmt=png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>打印类的详细信息，加入<code>-d</code>参数并指定全限定类名；</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>sc -d com.macro.mall.tiny.common.api.CommonResult
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://mmbiz.qpic.cn/mmbiz_png/CKvMdchsUwnWxQwZTsUTr44QOG4offooSFPAnJtTibI7RPoEPuT8zyQjOkO3yyKzRgyN1tIkvEmF5sTmlW74YMQ/640?wx_fmt=png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>打印出类的Field信息，使用<code>-f</code>参数。</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>sc -d -f com.macro.mall.tiny.common.api.CommonResult
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://mmbiz.qpic.cn/mmbiz_png/CKvMdchsUwnWxQwZTsUTr44QOG4offooFXOjdJg7TODqrU5FtVEJf0PtV7kwIib0iaic8xONTAgrYzUAEuXxrwV1A/640?wx_fmt=png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="sm" tabindex="-1"><a class="header-anchor" href="#sm" aria-hidden="true">#</a> sm</h3><p>查看已加载类的方法信息，<code>Search-Method</code>的简写，搜索出所有已经加载的类的方法信息。</p><ul><li>查看类中的所有方法；</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>sm com.macro.mall.tiny.common.api.CommonResult
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://mmbiz.qpic.cn/mmbiz_png/CKvMdchsUwnWxQwZTsUTr44QOG4offoovlAibEeEEYD2WD835BmsVoAf8x0xUOlP0QqeeVAeziaq3rbK7TQ5a2IQ/640?wx_fmt=png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>查看指定方法信息，使用<code>-d</code>参数并指定方法名称；</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>sm -d com.macro.mall.tiny.common.api.CommonResult getCode
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://mmbiz.qpic.cn/mmbiz_png/CKvMdchsUwnWxQwZTsUTr44QOG4offooowicx8SWibaVqbOwacV05flX7oTqJ2vIPk6WgRloarBy89SFKlcTDlhw/640?wx_fmt=png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="jad" tabindex="-1"><a class="header-anchor" href="#jad" aria-hidden="true">#</a> jad</h3><p>反编译已加载类的源码，觉得线上代码和预期不一致，可以反编译看看。</p><ul><li>查看启动类的相关信息，默认会带有<code>ClassLoader</code>信息；</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>jad com.macro.mall.tiny.MallTinyApplication
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://mmbiz.qpic.cn/mmbiz_png/CKvMdchsUwnWxQwZTsUTr44QOG4offooicbEiaoNLj7C23FuiaibMHoyDC2Tt0Dn4jRjN9sQuoWoJxfPsqN5eo1kvQ/640?wx_fmt=png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>使用<code>--source-only</code>参数可以只打印类信息。</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>jad --source-only com.macro.mall.tiny.MallTinyApplication
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://mmbiz.qpic.cn/mmbiz_png/CKvMdchsUwnWxQwZTsUTr44QOG4offoolnYGO2CwyicLDUB5AjvqjmrrIcibDoxwNOmWiagaXMwlYrjItcwJpibm1w/640?wx_fmt=png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="mc" tabindex="-1"><a class="header-anchor" href="#mc" aria-hidden="true">#</a> mc</h3><p>内存编译器，<code>Memory Compiler</code>的缩写，编译<code>.java</code>文件生成<code>.class</code>。</p><h3 id="redefine" tabindex="-1"><a class="header-anchor" href="#redefine" aria-hidden="true">#</a> redefine</h3><p>加载外部的<code>.class</code>文件，覆盖掉 JVM中已经加载的类。</p><h3 id="monitor" tabindex="-1"><a class="header-anchor" href="#monitor" aria-hidden="true">#</a> monitor</h3><p>实时监控方法执行信息，可以查看方法执行成功此时、失败次数、平均耗时等信息。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>monitor -c 5 com.macro.mall.tiny.controller.PmsBrandController listBrand
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://mmbiz.qpic.cn/mmbiz_png/CKvMdchsUwnWxQwZTsUTr44QOG4offoowFU0DcoGteTJeQEicCIuYl32ehAwVUkO20xaeyjPZoqBKAAnibavo5dQ/640?wx_fmt=png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="watch" tabindex="-1"><a class="header-anchor" href="#watch" aria-hidden="true">#</a> watch</h3><p>方法执行数据观测，可以观察方法执行过程中的参数和返回值。</p><p>使用如下命令观察方法执行参数和返回值，<code>-x</code>表示结果属性遍历深度。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>watch com.macro.mall.tiny.service.impl.PmsBrandServiceImpl listBrand &quot;{params,returnObj}&quot; -x 2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://mmbiz.qpic.cn/mmbiz_png/CKvMdchsUwnWxQwZTsUTr44QOG4offooH0ZkFFiaQQxA1Gef1VlsPwUoIq0XMHtGMEzSRVEJiaz2ZwRkiasn2K4zQ/640?wx_fmt=png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="热更新" tabindex="-1"><a class="header-anchor" href="#热更新" aria-hidden="true">#</a> 热更新</h2><blockquote><p>尽管在线上环境热更代码并不是一个很好的行为，但有的时候我们真的很需要热更代码。下面介绍下如何使用<code>jad/mc/redefine</code>来热更新代码。</p></blockquote><ul><li>首先我们有一个商品详情的接口，当我们传入<code>id&lt;=0</code>时，会抛出<code>IllegalArgumentException</code>；</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>/** 

  * 品牌管理Controller 

  * Created by macro on 2019/4/19. 

  */ 
 @Api(tags = &quot;PmsBrandController&quot;, description = &quot;商品品牌管理&quot;) 
 @Controller 
 @RequestMapping(&quot;/brand&quot;) 
 public class PmsBrandController { 
     @Autowired 
     private PmsBrandService brandService; 
  
     private static final Logger LOGGER = LoggerFactory.getLogger(PmsBrandController.class); 
  
     @ApiOperation(&quot;获取指定id的品牌详情&quot;) 
     @RequestMapping(value = &quot;/{id}&quot;, method = RequestMethod.GET) 
     @ResponseBody 
     public CommonResult&lt;PmsBrand&gt; brand(@PathVariable(&quot;id&quot;) Long id) { 
         if(id&lt;=0){ 
             throw new IllegalArgumentException(&quot;id not excepted id:&quot;+id); 
         } 
         return CommonResult.success(brandService.getBrand(id)); 
     } 
 }
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,80),j={href:"http://192.168.5.94:8088/brand/0",target:"_blank",rel:"noopener noreferrer"},k=t(`<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>{ 
   &quot;timestamp&quot;: &quot;2020-06-12T06:20:20.951+0000&quot;, 
   &quot;status&quot;: 500, 
   &quot;error&quot;: &quot;Internal Server Error&quot;, 
   &quot;message&quot;: &quot;id not excepted id:0&quot;, 
   &quot;path&quot;: &quot;/brand/0&quot; 
 }
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>我们想对该问题进行修复，如果传入<code>id&lt;=0</code>时，直接返回空数据的<code>CommonResult</code>，代码修改内容如下；</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>/** 

  * 品牌管理Controller 

  * Created by macro on 2019/4/19. 

  */ 
 @Api(tags = &quot;PmsBrandController&quot;, description = &quot;商品品牌管理&quot;) 
 @Controller 
 @RequestMapping(&quot;/brand&quot;) 
 public class PmsBrandController { 
     @Autowired 
     private PmsBrandService brandService; 
  
     private static final Logger LOGGER = LoggerFactory.getLogger(PmsBrandController.class); 
      
     @ApiOperation(&quot;获取指定id的品牌详情&quot;) 
     @RequestMapping(value = &quot;/{id}&quot;, method = RequestMethod.GET) 
     @ResponseBody 
     public CommonResult&lt;PmsBrand&gt; brand(@PathVariable(&quot;id&quot;) Long id) { 
         if(id&lt;=0){ 
 //            throw new IllegalArgumentException(&quot;id not excepted id:&quot;+id); 
             return CommonResult.success(null); 
         } 
         return CommonResult.success(brandService.getBrand(id)); 
     } 
 }
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>首先我们需要对<code>PmsBrandController</code>类代码进行修改，接着上传到服务器，然后使用如下命令将<code>java</code>文件拷贝到容器的<code>/tmp</code>目录下；</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker container cp /tmp/PmsBrandController.java mall-tiny-arthas:/tmp/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>之后我们需要查看该类的类加载器的Hash值；</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>sc -d *PmsBrandController | grep classLoaderHash
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://mmbiz.qpic.cn/mmbiz_png/CKvMdchsUwnWxQwZTsUTr44QOG4offooJw21r7sBKlJPTeCJ4TBKxo9vriafUlTXQaybz2bofb9Z6kXJqRbRTyQ/640?wx_fmt=png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>之后使用内存编译器把改<code>.java</code>文件编译成<code>.class</code>文件，注意需要使用<code>-c</code>指定类加载器；</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>mc -c 21b8d17c /tmp/PmsBrandController.java -d /tmp
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://mmbiz.qpic.cn/mmbiz_png/CKvMdchsUwnWxQwZTsUTr44QOG4offooy84dOz2jhhREibicRlU1hTBvfPWjbb9b7jlK4YibjJLXbxltKhnibbdF9Q/640?wx_fmt=png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>最后使用<code>redefine</code>命令加载<code>.class</code>文件，将原来加载的类覆盖掉；</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>redefine -c 21b8d17c /tmp/com/macro/mall/tiny/controller/PmsBrandController.class
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://mmbiz.qpic.cn/mmbiz_png/CKvMdchsUwnWxQwZTsUTr44QOG4offoozVmP1r8ba1vn15GWzcT8D7RpkhibbqV5N4SjU8ynMVPfw1FIAyMp8zw/640?wx_fmt=png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>`,14),B={href:"http://192.168.3.101:8088/brand/0",target:"_blank",rel:"noopener noreferrer"},O=t(`<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>{ 
   &quot;code&quot;: 200, 
   &quot;message&quot;: &quot;操作成功&quot;, 
   &quot;data&quot;: null 
 }
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料" aria-hidden="true">#</a> 参考资料</h2>`,2),G={href:"https://alibaba.github.io/arthas/",target:"_blank",rel:"noopener noreferrer"},P=e("h2",{id:"项目源码地址",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#项目源码地址","aria-hidden":"true"},"#"),i(" 项目源码地址")],-1),R={href:"https://github.com/macrozheng/mall-learning/tree/master/mall-tiny-arthas",target:"_blank",rel:"noopener noreferrer"},K=e("hr",null,null,-1),A=e("code",null,"标星60K",-1),N={href:"https://mp.weixin.qq.com/s?__biz=MzU1Nzg4NjgyMw==&mid=2247510592&idx=1&sn=ca49cdaf727c5d9cb94ae774fe0d7643&scene=21#wechat_redirect",target:"_blank",rel:"noopener noreferrer"},W=e("code",null,"约40小时，共105期",-1),E=e("code",null,"涵盖主流Java技术栈的完整项目经验",-1),V=e("code",null,"独立开发一个项目的能力",-1),Z={href:"https://mp.weixin.qq.com/s?__biz=MzU1Nzg4NjgyMw==&mid=2247510592&idx=1&sn=ca49cdaf727c5d9cb94ae774fe0d7643&scene=21#wechat_redirect",target:"_blank",rel:"noopener noreferrer"},S=e("figure",null,[e("img",{src:"https://mmbiz.qpic.cn/mmbiz_jpg/CKvMdchsUwnWxQwZTsUTr44QOG4offoohblMMPEDjSDDnlWX9a7GK39zvSZVuhTt6RUkJbLUwEaa9M4Vd6vlibg/640?wx_fmt=jpeg",alt:"",tabindex:"0",loading:"lazy"}),e("figcaption")],-1),D={href:"https://mp.weixin.qq.com/s?__biz=MzU1Nzg4NjgyMw==&mid=2247510592&idx=1&sn=ca49cdaf727c5d9cb94ae774fe0d7643&scene=21#wechat_redirect",target:"_blank",rel:"noopener noreferrer"},J={href:"https://mp.weixin.qq.com/s?__biz=MzU1Nzg4NjgyMw==&mid=2247510592&idx=1&sn=ca49cdaf727c5d9cb94ae774fe0d7643&scene=21#wechat_redirect",target:"_blank",rel:"noopener noreferrer"},I=e("figure",null,[e("img",{src:"https://mmbiz.qpic.cn/mmbiz_jpg/CKvMdchsUwnWxQwZTsUTr44QOG4offooem9LbH5qd3ia3bKEPmaGcyBiamhHpv7NLh5FDiak4bokBVsCEGsBnHMaw/640?wx_fmt=jpeg",alt:"",tabindex:"0",loading:"lazy"}),e("figcaption")],-1),L=e("h2",{id:"推荐阅读",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#推荐阅读","aria-hidden":"true"},"#"),i(" 推荐阅读")],-1),F={href:"https://mp.weixin.qq.com/s?__biz=MzU1Nzg4NjgyMw==&mid=2247512035&idx=1&sn=711bb886c3b51d4c69e3a0aee8219be8&scene=21#wechat_redirect",target:"_blank",rel:"noopener noreferrer"},H={href:"https://mp.weixin.qq.com/s?__biz=MzU1Nzg4NjgyMw==&mid=2247510592&idx=1&sn=ca49cdaf727c5d9cb94ae774fe0d7643&scene=21#wechat_redirect",target:"_blank",rel:"noopener noreferrer"},X={href:"https://mp.weixin.qq.com/s?__biz=MzU1Nzg4NjgyMw==&mid=2247513826&idx=1&sn=0f582ade89a5d300a3a2dbd1247a54f1&scene=21#wechat_redirect",target:"_blank",rel:"noopener noreferrer"},Y={href:"https://mp.weixin.qq.com/s?__biz=MzU1Nzg4NjgyMw==&mid=2247509371&idx=1&sn=388ee12b3a6557f8c0f54ab7ea1236fb&scene=21#wechat_redirect",target:"_blank",rel:"noopener noreferrer"},$={href:"https://mp.weixin.qq.com/s?__biz=MzU1Nzg4NjgyMw==&mid=2247513093&idx=1&sn=03fb22d469f50f03793030e9a0c30551&scene=21#wechat_redirect",target:"_blank",rel:"noopener noreferrer"},ee={href:"https://mp.weixin.qq.com/s?__biz=MzU1Nzg4NjgyMw==&mid=2247508732&idx=1&sn=3d10d005c554c43e7ce601aec4a94fda&scene=21#wechat_redirect",target:"_blank",rel:"noopener noreferrer"},ie=e("figure",null,[e("img",{src:"https://mmbiz.qpic.cn/mmbiz_gif/CKvMdchsUwlkU1ysoMgG69dVYbCQcI6Byneb8ibzZWPfUCr3T8CuBicCSGyFE6SpAtxpxtDCp6VlZ4F1hEL1BNyg/640?wx_fmt=gif",alt:"",tabindex:"0",loading:"lazy"}),e("figcaption")],-1),ne={href:"https://mp.weixin.qq.com/s/iX8x5Rqln4pX4Qv3PuPy9Q",target:"_blank",rel:"noopener noreferrer"};function ae(te,le){const n=d("ExternalLinkIcon");return r(),s("div",null,[c,e("p",null,[i("mall学习教程官网："),e("strong",null,[e("a",m,[i("macrozheng.com"),a(n)])])]),u,g,b,p,h,e("ul",null,[e("li",null,[i("使用"),v,i("，下载对应jar包，下载地址："),e("a",f,[i("https://alibaba.github.io/arthas/arthas-boot.jar"),a(n)])]),x,_]),w,e("blockquote",null,[z,e("ul",null,[e("li",null,[i("项目地址："),e("strong",null,[e("a",q,[i("https://github.com/macrozheng/mall"),a(n)])])]),e("li",null,[i("视频教程："),e("strong",null,[e("a",y,[i("https://www.macrozheng.com/video/"),a(n)])])])]),M,T,U,Q]),C,e("ul",null,[e("li",null,[i("调用接口会返回如下信息，调用地址："),e("a",j,[i("http://192.168.5.94:8088/brand/0"),a(n)])])]),k,e("ul",null,[e("li",null,[i("我们再次调用接口进行测试，发现已经返回了预期的结果，调用地址："),e("a",B,[i("http://192.168.3.101:8088/brand/0"),a(n)])])]),O,e("p",null,[i("官方文档："),e("strong",null,[e("a",G,[i("https://alibaba.github.io/arthas/"),a(n)])])]),P,e("p",null,[e("strong",null,[e("a",R,[i("https://github.com/macrozheng/mall-learning/tree/master/mall-tiny-arthas"),a(n)])])]),K,e("p",null,[i("Github上"),A,i("的电商实战项目mall，全套 "),e("a",N,[i("视频教程（2023最新版）"),a(n)]),i(" 已更新完毕！全套教程"),W,i("，通过这套教程你可以拥有一个"),E,i("，同时提高自己"),V,i("，下面是项目的整体架构图，感兴趣的小伙伴可以点击链接 "),e("a",Z,[i("mall视频教程"),a(n)]),i(" 加入学习。")]),S,e("p",null,[i("整套 "),e("a",D,[i("视频教程"),a(n)]),i(" 的内容还是非常完善的，涵盖了mall项目最佳学习路线、整体框架搭建、业务与技术实现全方位解析、线上Docker环境部署等内容，具体大纲可以参考下图，你也可以点击链接 "),e("a",J,[i("mall视频教程"),a(n)]),i(" 了解更多内容。")]),I,L,e("ul",null,[e("li",null,[e("a",F,[i("69K Star！这是我见过最强的开源电商系统 ！！"),a(n)])]),e("li",null,[e("a",H,[i("Github标星60K！一套完整的项目实战教程来了，主流Java技术一网打尽！"),a(n)])]),e("li",null,[e("a",X,[i("看了我项目中购物车、订单、支付一整套设计，同事也开始悄悄模仿了..."),a(n)])]),e("li",null,[e("a",Y,[i("订单系统就该这么设计，稳的一批！"),a(n)])]),e("li",null,[e("a",$,[i("支付系统就该这么设计，稳的一批！"),a(n)])]),e("li",null,[e("a",ee,[i("权限系统就该这么设计，稳的一批！"),a(n)])])]),ie,e("blockquote",null,[e("p",null,[i("参考链接："),e("a",ne,[i("https://mp.weixin.qq.com/s/iX8x5Rqln4pX4Qv3PuPy9Q"),a(n)]),i("，整理：沉默王二")])])])}const se=l(o,[["render",ae],["__file","xuekarthasrnnjyzwngl.html.vue"]]);export{se as default};
