const e=JSON.parse('{"key":"v-adf4a16e","path":"/thread/map.html","title":"聊聊Java的并发集合容器ConcurrentHashMap、阻塞队列和 CopyOnWrite 容器","lang":"zh-CN","frontmatter":{"title":"聊聊Java的并发集合容器ConcurrentHashMap、阻塞队列和 CopyOnWrite 容器","shortTitle":"Java的并发容器","description":"Java 的并发集合容器提供了在多线程环境中高效访问和操作的数据结构。这些容器通过内部的同步机制实现了线程安全，使得开发者无需显式同步代码就能在并发环境下安全使用。","category":["Java核心"],"tag":["Java并发编程"],"head":[["meta",{"name":"keywords","content":"Java,并发编程,多线程,Thread,并发集合容器"}],["meta",{"property":"og:url","content":"https://javabetter.cn/thread/map.html"}],["meta",{"property":"og:site_name","content":"二哥的Java进阶之路"}],["meta",{"property":"og:title","content":"聊聊Java的并发集合容器ConcurrentHashMap、阻塞队列和 CopyOnWrite 容器"}],["meta",{"property":"og:description","content":"Java 的并发集合容器提供了在多线程环境中高效访问和操作的数据结构。这些容器通过内部的同步机制实现了线程安全，使得开发者无需显式同步代码就能在并发环境下安全使用。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-08T12:03:00.000Z"}],["meta",{"property":"article:author","content":"沉默王二"}],["meta",{"property":"article:tag","content":"Java并发编程"}],["meta",{"property":"article:modified_time","content":"2023-12-08T12:03:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"聊聊Java的并发集合容器ConcurrentHashMap、阻塞队列和 CopyOnWrite 容器\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-12-08T12:03:00.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"沉默王二\\",\\"url\\":\\"/about-the-author/\\"}]}"]]},"headers":[{"level":2,"title":"并发容器类","slug":"并发容器类","link":"#并发容器类","children":[]},{"level":2,"title":"并发 Map","slug":"并发-map","link":"#并发-map","children":[{"level":3,"title":"ConcurrentMap 接口","slug":"concurrentmap-接口","link":"#concurrentmap-接口","children":[]},{"level":3,"title":"ConcurrentHashMap","slug":"concurrenthashmap","link":"#concurrenthashmap","children":[]},{"level":3,"title":"ConcurrentSkipListMap","slug":"concurrentskiplistmap","link":"#concurrentskiplistmap","children":[]}]},{"level":2,"title":"并发 Queue","slug":"并发-queue","link":"#并发-queue","children":[]},{"level":2,"title":"并发 Set","slug":"并发-set","link":"#并发-set","children":[]},{"level":2,"title":"阻塞队列","slug":"阻塞队列","link":"#阻塞队列","children":[{"level":3,"title":"BlockingQueue 的操作方法","slug":"blockingqueue-的操作方法","link":"#blockingqueue-的操作方法","children":[]},{"level":3,"title":"BlockingQueue 的实现类","slug":"blockingqueue-的实现类","link":"#blockingqueue-的实现类","children":[]}]},{"level":2,"title":"CopyOnWrite 容器","slug":"copyonwrite-容器","link":"#copyonwrite-容器","children":[]},{"level":2,"title":"小结","slug":"小结","link":"#小结","children":[]}],"git":{"createdTime":1648037338000,"updatedTime":1702036980000,"contributors":[{"name":"itwanger","email":"www.qing_gee@163.com","commits":18},{"name":"沉默王二","email":"www.qing_gee@163.com","commits":3}]},"readingTime":{"minutes":11.66,"words":3499},"filePathRelative":"thread/map.md","localizedDate":"2022年3月23日","excerpt":"<h1> 第十九节：Java的并发容器</h1>\\n<p>Java 的并发集合容器提供了在多线程环境中高效访问和操作的数据结构。这些容器通过内部的同步机制实现了线程安全，使得开发者无需显式同步代码就能在并发环境下安全使用，比如说：ConcurrentHashMap、阻塞队列和 CopyOnWrite 容器等。</p>\\n<p>java.util 包下提供了一些容器类（<a href=\\"https://javabetter.cn/collection/gailan.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">集合框架</a>），其中 Vector 和 Hashtable 是线程安全的，但实现方式比较粗暴，通过在方法上加「<a href=\\"https://javabetter.cn/thread/synchronized-1.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">sychronized</a>」关键字实现。</p>"}');export{e as data};
