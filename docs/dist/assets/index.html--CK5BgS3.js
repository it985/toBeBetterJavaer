import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,a as e,b as l,w as t,e as A,r as B,o,d as i}from"./app-wJXw8B29.js";const d={},a=A('<h1 id="二哥版《剑指-offer题解》" tabindex="-1"><a class="header-anchor" href="#二哥版《剑指-offer题解》"><span>二哥版《剑指 offer题解》</span></a></h1><p>《剑指 Offer》是程序员圈子里公认的“面试宝典”，特别适合想要进入大厂的读者朋友们。这本书的作者是何海涛，他凭借多年的技术面试经验，总结了程序员在面试中常见的高频问题，从算法到数据结构，无所不包。</p><p>它的最大亮点在于，不仅提供了解题思路，还给出了详细的代码实现以及多种优化方法，让读者在学会解题的同时，还能理解背后的原理。</p><p>目录上，整本书分为数组、链表、栈与队列、字符串、树、动态规划等主题，每个章节都是满满的干货。</p><p>比如你会遇到“二叉树的遍历”“链表的反转”等基础问题，也会涉及到“滑动窗口”“动态规划”等复杂话题。每道题目不只是教你怎么解，还会告诉你为什么这样解、有什么替代方案，以及面试官可能会追问的延伸问题，绝对是帮你深入理解题目的最佳指南。</p><p>要说这本书的独特之处，就在于它就像一个老朋友，和你聊聊面试中的“潜规则”和“套路”，一步步带你进阶成算法高手。</p><p>而且，它不像有些书那么“高冷”，每个题目讲解得通俗易懂、循序渐进，就算你是小白，也能在不知不觉中提升自己的算法能力。所以，无论是准备找工作还是充实自我，《剑指 Offer》都是程序员不可多得的“秘密武器”！</p><h2 id="数组与矩阵" tabindex="-1"><a class="header-anchor" href="#数组与矩阵"><span>数组与矩阵</span></a></h2>',8),r=e("h2",{id:"栈队列堆",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#栈队列堆"},[e("span",null,"栈队列堆")])],-1),c=e("h2",{id:"双指针",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#双指针"},[e("span",null,"双指针")])],-1),u=e("h2",{id:"链表",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#链表"},[e("span",null,"链表")])],-1),h=e("h2",{id:"树",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#树"},[e("span",null,"树")])],-1),f=e("h2",{id:"贪心思想",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#贪心思想"},[e("span",null,"贪心思想")])],-1),_=e("h2",{id:"二分查找",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#二分查找"},[e("span",null,"二分查找")])],-1),m=e("h2",{id:"分治",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#分治"},[e("span",null,"分治")])],-1),g=e("h2",{id:"搜索",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#搜索"},[e("span",null,"搜索")])],-1),D=e("h2",{id:"排序",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#排序"},[e("span",null,"排序")])],-1),v=e("h2",{id:"动态规划",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#动态规划"},[e("span",null,"动态规划")])],-1),b=e("h2",{id:"数学",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#数学"},[e("span",null,"数学")])],-1),C=e("h2",{id:"位运算",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#位运算"},[e("span",null,"位运算")])],-1),w=e("h2",{id:"其它",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#其它"},[e("span",null,"其它")])],-1);function p(F,x){const E=B("RouteLink");return o(),s("div",null,[a,e("ul",null,[e("li",null,[l(E,{to:"/sidebar/csnotes/coding-interviews/3.%20%E6%95%B0%E7%BB%84%E4%B8%AD%E9%87%8D%E5%A4%8D%E7%9A%84%E6%95%B0%E5%AD%97.html"},{default:t(()=>[i("3. 数组中重复的数字")]),_:1})]),e("li",null,[l(E,{to:"/sidebar/csnotes/coding-interviews/4.%20%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%9F%A5%E6%89%BE.html"},{default:t(()=>[i("4. 二维数组中的查找")]),_:1})]),e("li",null,[l(E,{to:"/sidebar/csnotes/coding-interviews/5.%20%E6%9B%BF%E6%8D%A2%E7%A9%BA%E6%A0%BC.html"},{default:t(()=>[i("5. 替换空格")]),_:1})]),e("li",null,[l(E,{to:"/sidebar/csnotes/coding-interviews/29.%20%E9%A1%BA%E6%97%B6%E9%92%88%E6%89%93%E5%8D%B0%E7%9F%A9%E9%98%B5.html"},{default:t(()=>[i("29. 顺时针打印矩阵")]),_:1})]),e("li",null,[l(E,{to:"/sidebar/csnotes/coding-interviews/50.%20%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%8F%AA%E5%87%BA%E7%8E%B0%E4%B8%80%E6%AC%A1%E7%9A%84%E5%AD%97%E7%AC%A6%E4%BD%8D%E7%BD%AE.html"},{default:t(()=>[i("50. 第一个只出现一次的字符位置")]),_:1})])]),r,e("ul",null,[e("li",null,[l(E,{to:"/sidebar/csnotes/coding-interviews/9.%20%E7%94%A8%E4%B8%A4%E4%B8%AA%E6%A0%88%E5%AE%9E%E7%8E%B0%E9%98%9F%E5%88%97.html"},{default:t(()=>[i("9. 用两个栈实现队列")]),_:1})]),e("li",null,[l(E,{to:"/sidebar/csnotes/coding-interviews/30.%20%E5%8C%85%E5%90%AB%20min%20%E5%87%BD%E6%95%B0%E7%9A%84%E6%A0%88.html"},{default:t(()=>[i("30. 包含 min 函数的栈")]),_:1})]),e("li",null,[l(E,{to:"/sidebar/csnotes/coding-interviews/31.%20%E6%A0%88%E7%9A%84%E5%8E%8B%E5%85%A5%E3%80%81%E5%BC%B9%E5%87%BA%E5%BA%8F%E5%88%97.html"},{default:t(()=>[i("31. 栈的压入、弹出序列")]),_:1})]),e("li",null,[l(E,{to:"/sidebar/csnotes/coding-interviews/40.%20%E6%9C%80%E5%B0%8F%E7%9A%84%20K%20%E4%B8%AA%E6%95%B0.html"},{default:t(()=>[i("40. 最小的 K 个数")]),_:1})]),e("li",null,[l(E,{to:"/sidebar/csnotes/coding-interviews/41.1%20%E6%95%B0%E6%8D%AE%E6%B5%81%E4%B8%AD%E7%9A%84%E4%B8%AD%E4%BD%8D%E6%95%B0.html"},{default:t(()=>[i("41.1 数据流中的中位数")]),_:1})]),e("li",null,[l(E,{to:"/sidebar/csnotes/coding-interviews/41.2%20%E5%AD%97%E7%AC%A6%E6%B5%81%E4%B8%AD%E7%AC%AC%E4%B8%80%E4%B8%AA%E4%B8%8D%E9%87%8D%E5%A4%8D%E7%9A%84%E5%AD%97%E7%AC%A6.html"},{default:t(()=>[i("41.2 字符流中第一个不重复的字符")]),_:1})]),e("li",null,[l(E,{to:"/sidebar/csnotes/coding-interviews/59.%20%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3%E7%9A%84%E6%9C%80%E5%A4%A7%E5%80%BC.html"},{default:t(()=>[i("59. 滑动窗口的最大值")]),_:1})])]),c,e("ul",null,[e("li",null,[l(E,{to:"/sidebar/csnotes/coding-interviews/57.1%20%E5%92%8C%E4%B8%BA%20S%20%E7%9A%84%E4%B8%A4%E4%B8%AA%E6%95%B0%E5%AD%97.html"},{default:t(()=>[i("57.1 和为 S 的两个数字")]),_:1})]),e("li",null,[l(E,{to:"/sidebar/csnotes/coding-interviews/57.2%20%E5%92%8C%E4%B8%BA%20S%20%E7%9A%84%E8%BF%9E%E7%BB%AD%E6%AD%A3%E6%95%B0%E5%BA%8F%E5%88%97.html"},{default:t(()=>[i("57.2 和为 S 的连续正数序列")]),_:1})]),e("li",null,[l(E,{to:"/sidebar/csnotes/coding-interviews/58.1%20%E7%BF%BB%E8%BD%AC%E5%8D%95%E8%AF%8D%E9%A1%BA%E5%BA%8F%E5%88%97.html"},{default:t(()=>[i("58.1 翻转单词顺序列")]),_:1})]),e("li",null,[l(E,{to:"/sidebar/csnotes/coding-interviews/58.2%20%E5%B7%A6%E6%97%8B%E8%BD%AC%E5%AD%97%E7%AC%A6%E4%B8%B2.html"},{default:t(()=>[i("58.2 左旋转字符串")]),_:1})])]),u,e("ul",null,[e("li",null,[l(E,{to:"/sidebar/csnotes/coding-interviews/6.%20%E4%BB%8E%E5%B0%BE%E5%88%B0%E5%A4%B4%E6%89%93%E5%8D%B0%E9%93%BE%E8%A1%A8.html"},{default:t(()=>[i("6. 从尾到头打印链表")]),_:1})]),e("li",null,[l(E,{to:"/sidebar/csnotes/coding-interviews/18.1%20%E5%9C%A8%20O(1)%20%E6%97%B6%E9%97%B4%E5%86%85%E5%88%A0%E9%99%A4%E9%93%BE%E8%A1%A8%E8%8A%82%E7%82%B9.html"},{default:t(()=>[i("18.1 在 O(1) 时间内删除链表节点")]),_:1})]),e("li",null,[l(E,{to:"/sidebar/csnotes/coding-interviews/18.2%20%E5%88%A0%E9%99%A4%E9%93%BE%E8%A1%A8%E4%B8%AD%E9%87%8D%E5%A4%8D%E7%9A%84%E7%BB%93%E7%82%B9.html"},{default:t(()=>[i("18.2 删除链表中重复的结点")]),_:1})]),e("li",null,[l(E,{to:"/sidebar/csnotes/coding-interviews/22.%20%E9%93%BE%E8%A1%A8%E4%B8%AD%E5%80%92%E6%95%B0%E7%AC%AC%20K%20%E4%B8%AA%E7%BB%93%E7%82%B9.html"},{default:t(()=>[i("22. 链表中倒数第 K 个结点")]),_:1})]),e("li",null,[l(E,{to:"/sidebar/csnotes/coding-interviews/23.%20%E9%93%BE%E8%A1%A8%E4%B8%AD%E7%8E%AF%E7%9A%84%E5%85%A5%E5%8F%A3%E7%BB%93%E7%82%B9.html"},{default:t(()=>[i("23. 链表中环的入口结点")]),_:1})]),e("li",null,[l(E,{to:"/sidebar/csnotes/coding-interviews/24.%20%E5%8F%8D%E8%BD%AC%E9%93%BE%E8%A1%A8.html"},{default:t(()=>[i("24. 反转链表")]),_:1})]),e("li",null,[l(E,{to:"/sidebar/csnotes/coding-interviews/25.%20%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E6%8E%92%E5%BA%8F%E7%9A%84%E9%93%BE%E8%A1%A8.html"},{default:t(()=>[i("25. 合并两个排序的链表")]),_:1})]),e("li",null,[l(E,{to:"/sidebar/csnotes/coding-interviews/35.%20%E5%A4%8D%E6%9D%82%E9%93%BE%E8%A1%A8%E7%9A%84%E5%A4%8D%E5%88%B6.html"},{default:t(()=>[i("35. 复杂链表的复制")]),_:1})]),e("li",null,[l(E,{to:"/sidebar/csnotes/coding-interviews/52.%20%E4%B8%A4%E4%B8%AA%E9%93%BE%E8%A1%A8%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%85%AC%E5%85%B1%E7%BB%93%E7%82%B9.html"},{default:t(()=>[i("52. 两个链表的第一个公共结点")]),_:1})])]),h,e("ul",null,[e("li",null,[l(E,{to:"/sidebar/csnotes/coding-interviews/7.%20%E9%87%8D%E5%BB%BA%E4%BA%8C%E5%8F%89%E6%A0%91.html"},{default:t(()=>[i("7. 重建二叉树")]),_:1})]),e("li",null,[l(E,{to:"/sidebar/csnotes/coding-interviews/8.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E4%B8%8B%E4%B8%80%E4%B8%AA%E7%BB%93%E7%82%B9.html"},{default:t(()=>[i("8. 二叉树的下一个结点")]),_:1})]),e("li",null,[l(E,{to:"/sidebar/csnotes/coding-interviews/26.%20%E6%A0%91%E7%9A%84%E5%AD%90%E7%BB%93%E6%9E%84.html"},{default:t(()=>[i("26. 树的子结构")]),_:1})]),e("li",null,[l(E,{to:"/sidebar/csnotes/coding-interviews/27.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E9%95%9C%E5%83%8F.html"},{default:t(()=>[i("27. 二叉树的镜像")]),_:1})]),e("li",null,[l(E,{to:"/sidebar/csnotes/coding-interviews/28.%20%E5%AF%B9%E7%A7%B0%E7%9A%84%E4%BA%8C%E5%8F%89%E6%A0%91.html"},{default:t(()=>[i("28. 对称的二叉树")]),_:1})]),e("li",null,[l(E,{to:"/sidebar/csnotes/coding-interviews/32.1%20%E4%BB%8E%E4%B8%8A%E5%BE%80%E4%B8%8B%E6%89%93%E5%8D%B0%E4%BA%8C%E5%8F%89%E6%A0%91.html"},{default:t(()=>[i("32.1 从上往下打印二叉树")]),_:1})]),e("li",null,[l(E,{to:"/sidebar/csnotes/coding-interviews/32.2%20%E6%8A%8A%E4%BA%8C%E5%8F%89%E6%A0%91%E6%89%93%E5%8D%B0%E6%88%90%E5%A4%9A%E8%A1%8C.html"},{default:t(()=>[i("32.2 把二叉树打印成多行")]),_:1})]),e("li",null,[l(E,{to:"/sidebar/csnotes/coding-interviews/32.3%20%E6%8C%89%E4%B9%8B%E5%AD%97%E5%BD%A2%E9%A1%BA%E5%BA%8F%E6%89%93%E5%8D%B0%E4%BA%8C%E5%8F%89%E6%A0%91.html"},{default:t(()=>[i("32.3 按之字形顺序打印二叉树")]),_:1})]),e("li",null,[l(E,{to:"/sidebar/csnotes/coding-interviews/33.%20%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E7%9A%84%E5%90%8E%E5%BA%8F%E9%81%8D%E5%8E%86%E5%BA%8F%E5%88%97.html"},{default:t(()=>[i("33. 二叉搜索树的后序遍历序列")]),_:1})]),e("li",null,[l(E,{to:"/sidebar/csnotes/coding-interviews/34.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E4%B8%AD%E5%92%8C%E4%B8%BA%E6%9F%90%E4%B8%80%E5%80%BC%E7%9A%84%E8%B7%AF%E5%BE%84.html"},{default:t(()=>[i("34. 二叉树中和为某一值的路径")]),_:1})]),e("li",null,[l(E,{to:"/sidebar/csnotes/coding-interviews/36.%20%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E4%B8%8E%E5%8F%8C%E5%90%91%E9%93%BE%E8%A1%A8.html"},{default:t(()=>[i("36. 二叉搜索树与双向链表")]),_:1})]),e("li",null,[l(E,{to:"/sidebar/csnotes/coding-interviews/37.%20%E5%BA%8F%E5%88%97%E5%8C%96%E4%BA%8C%E5%8F%89%E6%A0%91.html"},{default:t(()=>[i("37. 序列化二叉树")]),_:1})]),e("li",null,[l(E,{to:"/sidebar/csnotes/coding-interviews/54.%20%E4%BA%8C%E5%8F%89%E6%9F%A5%E6%89%BE%E6%A0%91%E7%9A%84%E7%AC%AC%20K%20%E4%B8%AA%E7%BB%93%E7%82%B9.html"},{default:t(()=>[i("54. 二叉查找树的第 K 个结点")]),_:1})]),e("li",null,[l(E,{to:"/sidebar/csnotes/coding-interviews/55.1%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%B7%B1%E5%BA%A6.html"},{default:t(()=>[i("55.1 二叉树的深度")]),_:1})]),e("li",null,[l(E,{to:"/sidebar/csnotes/coding-interviews/55.2%20%E5%B9%B3%E8%A1%A1%E4%BA%8C%E5%8F%89%E6%A0%91.html"},{default:t(()=>[i("55.2 平衡二叉树")]),_:1})]),e("li",null,[l(E,{to:"/sidebar/csnotes/coding-interviews/68.%20%E6%A0%91%E4%B8%AD%E4%B8%A4%E4%B8%AA%E8%8A%82%E7%82%B9%E7%9A%84%E6%9C%80%E4%BD%8E%E5%85%AC%E5%85%B1%E7%A5%96%E5%85%88.html"},{default:t(()=>[i("68. 树中两个节点的最低公共祖先")]),_:1})])]),f,e("ul",null,[e("li",null,[l(E,{to:"/sidebar/csnotes/coding-interviews/14.%20%E5%89%AA%E7%BB%B3%E5%AD%90.html"},{default:t(()=>[i("14. 剪绳子")]),_:1})]),e("li",null,[l(E,{to:"/sidebar/csnotes/coding-interviews/63.%20%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E5%A4%A7%E5%88%A9%E6%B6%A6.html"},{default:t(()=>[i("63. 股票的最大利润")]),_:1})])]),_,e("ul",null,[e("li",null,[l(E,{to:"/sidebar/csnotes/coding-interviews/11.%20%E6%97%8B%E8%BD%AC%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%B0%8F%E6%95%B0%E5%AD%97.html"},{default:t(()=>[i("11. 旋转数组的最小数字")]),_:1})]),e("li",null,[l(E,{to:"/sidebar/csnotes/coding-interviews/53.%20%E6%95%B0%E5%AD%97%E5%9C%A8%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E5%87%BA%E7%8E%B0%E7%9A%84%E6%AC%A1%E6%95%B0.html"},{default:t(()=>[i("53. 数字在排序数组中出现的次数")]),_:1})])]),m,e("ul",null,[e("li",null,[l(E,{to:"/sidebar/csnotes/coding-interviews/16.%20%E6%95%B0%E5%80%BC%E7%9A%84%E6%95%B4%E6%95%B0%E6%AC%A1%E6%96%B9.html"},{default:t(()=>[i("16. 数值的整数次方")]),_:1})])]),g,e("ul",null,[e("li",null,[l(E,{to:"/sidebar/csnotes/coding-interviews/12.%20%E7%9F%A9%E9%98%B5%E4%B8%AD%E7%9A%84%E8%B7%AF%E5%BE%84.html"},{default:t(()=>[i("12. 矩阵中的路径")]),_:1})]),e("li",null,[l(E,{to:"/sidebar/csnotes/coding-interviews/13.%20%E6%9C%BA%E5%99%A8%E4%BA%BA%E7%9A%84%E8%BF%90%E5%8A%A8%E8%8C%83%E5%9B%B4.html"},{default:t(()=>[i("13. 机器人的运动范围")]),_:1})]),e("li",null,[l(E,{to:"/sidebar/csnotes/coding-interviews/38.%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%8E%92%E5%88%97.html"},{default:t(()=>[i("38. 字符串的排列")]),_:1})])]),D,e("ul",null,[e("li",null,[l(E,{to:"/sidebar/csnotes/coding-interviews/21.%20%E8%B0%83%E6%95%B4%E6%95%B0%E7%BB%84%E9%A1%BA%E5%BA%8F%E4%BD%BF%E5%A5%87%E6%95%B0%E4%BD%8D%E4%BA%8E%E5%81%B6%E6%95%B0%E5%89%8D%E9%9D%A2.html"},{default:t(()=>[i("21. 调整数组顺序使奇数位于偶数前面")]),_:1})]),e("li",null,[l(E,{to:"/sidebar/csnotes/coding-interviews/45.%20%E6%8A%8A%E6%95%B0%E7%BB%84%E6%8E%92%E6%88%90%E6%9C%80%E5%B0%8F%E7%9A%84%E6%95%B0.html"},{default:t(()=>[i("45. 把数组排成最小的数")]),_:1})]),e("li",null,[l(E,{to:"/sidebar/csnotes/coding-interviews/51.%20%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E9%80%86%E5%BA%8F%E5%AF%B9.html"},{default:t(()=>[i("51. 数组中的逆序对")]),_:1})])]),v,e("ul",null,[e("li",null,[l(E,{to:"/sidebar/csnotes/coding-interviews/10.1%20%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E6%95%B0%E5%88%97.html"},{default:t(()=>[i("10.1 斐波那契数列")]),_:1})]),e("li",null,[l(E,{to:"/sidebar/csnotes/coding-interviews/10.2%20%E7%9F%A9%E5%BD%A2%E8%A6%86%E7%9B%96.html"},{default:t(()=>[i("10.2 矩形覆盖")]),_:1})]),e("li",null,[l(E,{to:"/sidebar/csnotes/coding-interviews/10.3%20%E8%B7%B3%E5%8F%B0%E9%98%B6.html"},{default:t(()=>[i("10.3 跳台阶")]),_:1})]),e("li",null,[l(E,{to:"/sidebar/csnotes/coding-interviews/10.4%20%E5%8F%98%E6%80%81%E8%B7%B3%E5%8F%B0%E9%98%B6.html"},{default:t(()=>[i("10.4 变态跳台阶")]),_:1})]),e("li",null,[l(E,{to:"/sidebar/csnotes/coding-interviews/42.%20%E8%BF%9E%E7%BB%AD%E5%AD%90%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%A4%A7%E5%92%8C.html"},{default:t(()=>[i("42. 连续子数组的最大和")]),_:1})]),e("li",null,[l(E,{to:"/sidebar/csnotes/coding-interviews/47.%20%E7%A4%BC%E7%89%A9%E7%9A%84%E6%9C%80%E5%A4%A7%E4%BB%B7%E5%80%BC.html"},{default:t(()=>[i("47. 礼物的最大价值")]),_:1})]),e("li",null,[l(E,{to:"/sidebar/csnotes/coding-interviews/48.%20%E6%9C%80%E9%95%BF%E4%B8%8D%E5%90%AB%E9%87%8D%E5%A4%8D%E5%AD%97%E7%AC%A6%E7%9A%84%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2.html"},{default:t(()=>[i("48. 最长不含重复字符的子字符串")]),_:1})]),e("li",null,[l(E,{to:"/sidebar/csnotes/coding-interviews/49.%20%E4%B8%91%E6%95%B0.html"},{default:t(()=>[i("49. 丑数")]),_:1})]),e("li",null,[l(E,{to:"/sidebar/csnotes/coding-interviews/60.%20n%20%E4%B8%AA%E9%AA%B0%E5%AD%90%E7%9A%84%E7%82%B9%E6%95%B0.html"},{default:t(()=>[i("60. n 个骰子的点数")]),_:1})]),e("li",null,[l(E,{to:"/sidebar/csnotes/coding-interviews/66.%20%E6%9E%84%E5%BB%BA%E4%B9%98%E7%A7%AF%E6%95%B0%E7%BB%84.html"},{default:t(()=>[i("66. 构建乘积数组")]),_:1})])]),b,e("ul",null,[e("li",null,[l(E,{to:"/sidebar/csnotes/coding-interviews/39.%20%E6%95%B0%E7%BB%84%E4%B8%AD%E5%87%BA%E7%8E%B0%E6%AC%A1%E6%95%B0%E8%B6%85%E8%BF%87%E4%B8%80%E5%8D%8A%E7%9A%84%E6%95%B0%E5%AD%97.html"},{default:t(()=>[i("39. 数组中出现次数超过一半的数字")]),_:1})]),e("li",null,[l(E,{to:"/sidebar/csnotes/coding-interviews/62.%20%E5%9C%86%E5%9C%88%E4%B8%AD%E6%9C%80%E5%90%8E%E5%89%A9%E4%B8%8B%E7%9A%84%E6%95%B0.html"},{default:t(()=>[i("62. 圆圈中最后剩下的数")]),_:1})]),e("li",null,[l(E,{to:"/sidebar/csnotes/coding-interviews/43.%20%E4%BB%8E%201%20%E5%88%B0%20n%20%E6%95%B4%E6%95%B0%E4%B8%AD%201%20%E5%87%BA%E7%8E%B0%E7%9A%84%E6%AC%A1%E6%95%B0.html"},{default:t(()=>[i("43. 从 1 到 n 整数中 1 出现的次数")]),_:1})])]),C,e("ul",null,[e("li",null,[l(E,{to:"/sidebar/csnotes/coding-interviews/15.%20%E4%BA%8C%E8%BF%9B%E5%88%B6%E4%B8%AD%201%20%E7%9A%84%E4%B8%AA%E6%95%B0.html"},{default:t(()=>[i("15. 二进制中 1 的个数")]),_:1})]),e("li",null,[l(E,{to:"/sidebar/csnotes/coding-interviews/56.%20%E6%95%B0%E7%BB%84%E4%B8%AD%E5%8F%AA%E5%87%BA%E7%8E%B0%E4%B8%80%E6%AC%A1%E7%9A%84%E6%95%B0%E5%AD%97.html"},{default:t(()=>[i("56. 数组中只出现一次的数字")]),_:1})])]),w,e("ul",null,[e("li",null,[l(E,{to:"/sidebar/csnotes/coding-interviews/17.%20%E6%89%93%E5%8D%B0%E4%BB%8E%201%20%E5%88%B0%E6%9C%80%E5%A4%A7%E7%9A%84%20n%20%E4%BD%8D%E6%95%B0.html"},{default:t(()=>[i("17. 打印从 1 到最大的 n 位数")]),_:1})]),e("li",null,[l(E,{to:"/sidebar/csnotes/coding-interviews/19.%20%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%8C%B9%E9%85%8D.html"},{default:t(()=>[i("19. 正则表达式匹配")]),_:1})]),e("li",null,[l(E,{to:"/sidebar/csnotes/coding-interviews/20.%20%E8%A1%A8%E7%A4%BA%E6%95%B0%E5%80%BC%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2.html"},{default:t(()=>[i("20. 表示数值的字符串")]),_:1})]),e("li",null,[l(E,{to:"/sidebar/csnotes/coding-interviews/44.%20%E6%95%B0%E5%AD%97%E5%BA%8F%E5%88%97%E4%B8%AD%E7%9A%84%E6%9F%90%E4%B8%80%E4%BD%8D%E6%95%B0%E5%AD%97.html"},{default:t(()=>[i("44. 数字序列中的某一位数字")]),_:1})]),e("li",null,[l(E,{to:"/sidebar/csnotes/coding-interviews/46.%20%E6%8A%8A%E6%95%B0%E5%AD%97%E7%BF%BB%E8%AF%91%E6%88%90%E5%AD%97%E7%AC%A6%E4%B8%B2.html"},{default:t(()=>[i("46. 把数字翻译成字符串")]),_:1})]),e("li",null,[l(E,{to:"/sidebar/csnotes/coding-interviews/61.%20%E6%89%91%E5%85%8B%E7%89%8C%E9%A1%BA%E5%AD%90.html"},{default:t(()=>[i("61. 扑克牌顺子")]),_:1})]),e("li",null,[l(E,{to:"/sidebar/csnotes/coding-interviews/64.%20%E6%B1%82%201+2+3+...+n.html"},{default:t(()=>[i("64. 求 1+2+3+...+n")]),_:1})]),e("li",null,[l(E,{to:"/sidebar/csnotes/coding-interviews/65.%20%E4%B8%8D%E7%94%A8%E5%8A%A0%E5%87%8F%E4%B9%98%E9%99%A4%E5%81%9A%E5%8A%A0%E6%B3%95.html"},{default:t(()=>[i("65. 不用加减乘除做加法")]),_:1})]),e("li",null,[l(E,{to:"/sidebar/csnotes/coding-interviews/67.%20%E6%8A%8A%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E6%8D%A2%E6%88%90%E6%95%B4%E6%95%B0.html"},{default:t(()=>[i("67. 把字符串转换成整数")]),_:1})])])])}const O=n(d,[["render",p],["__file","index.html.vue"]]),N=JSON.parse('{"path":"/sidebar/csnotes/coding-interviews/","title":"二哥版《剑指 offer题解》","lang":"zh-CN","frontmatter":{"description":"二哥版《剑指 offer题解》 《剑指 Offer》是程序员圈子里公认的“面试宝典”，特别适合想要进入大厂的读者朋友们。这本书的作者是何海涛，他凭借多年的技术面试经验，总结了程序员在面试中常见的高频问题，从算法到数据结构，无所不包。 它的最大亮点在于，不仅提供了解题思路，还给出了详细的代码实现以及多种优化方法，让读者在学会解题的同时，还能理解背后的原理...","head":[["meta",{"property":"og:url","content":"https://javabetter.cn/sidebar/csnotes/coding-interviews/"}],["meta",{"property":"og:site_name","content":"二哥的Java进阶之路"}],["meta",{"property":"og:title","content":"二哥版《剑指 offer题解》"}],["meta",{"property":"og:description","content":"二哥版《剑指 offer题解》 《剑指 Offer》是程序员圈子里公认的“面试宝典”，特别适合想要进入大厂的读者朋友们。这本书的作者是何海涛，他凭借多年的技术面试经验，总结了程序员在面试中常见的高频问题，从算法到数据结构，无所不包。 它的最大亮点在于，不仅提供了解题思路，还给出了详细的代码实现以及多种优化方法，让读者在学会解题的同时，还能理解背后的原理..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-03T02:40:13.000Z"}],["meta",{"property":"article:author","content":"沉默王二"}],["meta",{"property":"article:modified_time","content":"2024-11-03T02:40:13.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"二哥版《剑指 offer题解》\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-11-03T02:40:13.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"沉默王二\\",\\"url\\":\\"/about-the-author/\\"}]}"]]},"headers":[{"level":2,"title":"数组与矩阵","slug":"数组与矩阵","link":"#数组与矩阵","children":[]},{"level":2,"title":"栈队列堆","slug":"栈队列堆","link":"#栈队列堆","children":[]},{"level":2,"title":"双指针","slug":"双指针","link":"#双指针","children":[]},{"level":2,"title":"链表","slug":"链表","link":"#链表","children":[]},{"level":2,"title":"树","slug":"树","link":"#树","children":[]},{"level":2,"title":"贪心思想","slug":"贪心思想","link":"#贪心思想","children":[]},{"level":2,"title":"二分查找","slug":"二分查找","link":"#二分查找","children":[]},{"level":2,"title":"分治","slug":"分治","link":"#分治","children":[]},{"level":2,"title":"搜索","slug":"搜索","link":"#搜索","children":[]},{"level":2,"title":"排序","slug":"排序","link":"#排序","children":[]},{"level":2,"title":"动态规划","slug":"动态规划","link":"#动态规划","children":[]},{"level":2,"title":"数学","slug":"数学","link":"#数学","children":[]},{"level":2,"title":"位运算","slug":"位运算","link":"#位运算","children":[]},{"level":2,"title":"其它","slug":"其它","link":"#其它","children":[]}],"git":{"createdTime":1730601613000,"updatedTime":1730601613000,"contributors":[{"name":"沉默王二","email":"www.qing_gee@163.com","commits":1}]},"readingTime":{"minutes":6.76,"words":2027},"filePathRelative":"sidebar/csnotes/coding-interviews/readme.md","localizedDate":"2024年11月3日","excerpt":"\\n<p>《剑指 Offer》是程序员圈子里公认的“面试宝典”，特别适合想要进入大厂的读者朋友们。这本书的作者是何海涛，他凭借多年的技术面试经验，总结了程序员在面试中常见的高频问题，从算法到数据结构，无所不包。</p>\\n<p>它的最大亮点在于，不仅提供了解题思路，还给出了详细的代码实现以及多种优化方法，让读者在学会解题的同时，还能理解背后的原理。</p>\\n<p>目录上，整本书分为数组、链表、栈与队列、字符串、树、动态规划等主题，每个章节都是满满的干货。</p>\\n<p>比如你会遇到“二叉树的遍历”“链表的反转”等基础问题，也会涉及到“滑动窗口”“动态规划”等复杂话题。每道题目不只是教你怎么解，还会告诉你为什么这样解、有什么替代方案，以及面试官可能会追问的延伸问题，绝对是帮你深入理解题目的最佳指南。</p>","autoDesc":true}');export{O as comp,N as data};
